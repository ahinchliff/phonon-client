swagger: "2.0"
info:
  description: "UI frontend api (if that makes any sense)"
  version: "0.0.0"
  title: "Phonon-api"
host: "localhost:{{.}}"
basePath: "/"
tags:
- name: "sessions"
  description: "connected card sessions"
- name: "phonons"
  description: "phonons on selected card"
schemes:
- "http"
paths:
  /genMock:
    get:
      tags:
      - "sessions"
      responses:
        "200":
          description: "mock generated"
  /listSessions:
    get:
      tags:
      - "sessions"
      produces:
      - "application/json"
      responses:
        "404":
          description: "No connected cards"
        "200":
          description: "list of attached cards session info"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/SessionStatus"
  /cards/{sessionID}/init:
    post:
      tags:
      - "sessions"
      responses:
        "400":
          description: "card already initialized"
        "500":
          description: "unable to set PIN"
        "200":
          description: "card initialized succesfully"
      parameters:
      - in: path
        required: true
        name: sessionID
        type: string
        description: sessionID of connected card
      - in: "body"
        name: "body"
        description: "Pin to unlock the card"
        required: true
        schema:
          type: object
          properties:
            pin:
              type: "string"
  /cards/{sessionID}/unlock:
    post:
      tags:
      - "sessions"
      responses:
        "404":
          description: "no session with id"
        "200":
          description: "card unlocked"
      parameters:
      - in: path
        required: true
        name: sessionID
        type: string
        description: sessionID of connected card
      - in: "body"
        name: "body"
        description: "Pin to unlock the card"
        required: true
        schema:
          type: object
          properties:
            pin:
              type: "string"
  /cards/{sessionID}/connect:
    post:
      tags:
      - "sessions"
      responses:
        "404":
          description: "no session with id"
        "200":
          description: "Connected to Jumpbox"
    parameters:
      - in: path
        required: true
        name: sessionID
        type: string
        description: sessionID of connected card
      - in: "body"
        name: "body"
        description: "URL of the jumbbox host https://phonon-bridge.tld"
        required: true
        schema:
          type: object
          properties:
            url:
              type: "string"
  /cards/{sessionID}/connectionStatus:
    get:
      tags:
      - "sessions"
      responses:
        "500":
          description: "internal error retrieving connection status"
        "200":
          description: "connection status returned"
          schema:
            type: "object"
            properties:
              ConnectionStatus:
                type: "integer"
                description: "0: unconnected, 1: connectedToBridge, 2: connectedToCard, 3: CardPair1Complete, 4: CardPair2Complete, 5: CardPairingComplete"
    parameters:
      - in: path
        required: true
        name: sessionID
        type: string
        description: sessionID of connected card

  /cards/{sessionID}/connectLocal:
    post:
      tags:
      - "sessions"
      responses:
        "404":
          description: "no session with id"
        "200":
          description: "Ready to pair locally"
    parameters:
      - in: path
        required: true
        name: sessionID
        type: string
        description: sessionID of connected card
  /cards/{sessionID}/pair:
    post:
      tags:
      - "sessions"
      responses:
        "404":
          description: "no session with id"
        "200":
          description: "card Paired"
    parameters:
      - in: path
        required: true
        name: sessionID
        type: string
        description: sessionID of connected card
      - in: "body"
        name: "body"
        description: "ID of the card attached to the jumpobox you wish to pair with"
        required: true
        schema:
          type: object
          properties:
            cardID:
              type: "string"
  /cards/{sessionID}/listPhonons:
    get:
      tags:
      - "sessions"
      responses:
        "404":
          description: "no session with id"
        "200":
          description: "phonons listed"
          schema:
            type: "array"
            items:
              type: "object"
              properties:
                KeyIndex:
                  type: "integer"
                PubKey:
                  type: "string"
                Value:
                  type: "integer"
                CurrencyType:
                  type: "integer"
    parameters:
    - in: path
      required: true
      name: sessionID
      type: string
      description: sessionID of connected card
  /cards/{sessionID}/name:
    post:
      tags:
      - "sessions"
      responses:
        "500":
          description: "internal error retrieving connection status"
        "200":
          description: "session name is created"
      parameters:
        - in: path
          required: true
          name: sessionID
          type: string
          description: sessionID of connected card
        - in: "body"
          name: "body"
          description: "name of the session to be renammed"
          required: true
          schema:
            type: object
            properties:
              name:
                type: "string"
  /cards/{sessionID}/phonon/{phononIndex}/setDescriptor:
    post:
      tags:
      - "phonons"
      responses:
        "404":
          description: "Either the session or phonon doesnt exist"
        "200":
          description: "Descriptor set properly"
    parameters:
    - in: path
      required: true
      name: sessionID
      type: string
      description: sessionID of connected card
    - in: path
      required: true
      name: phononIndex
      type: string
      description: index of phonon to set descriptor on
    - in: "body"
      name: "body"
      description: "descriptor of phonon to be set"
      required: true
      schema:
        type: object
        properties:
          currencyType:
            type: "integer"
          value:
            type: "integer"
  /cards/{sessionID}/phonon/send:
    post:
      tags:
      - "phonons"
      responses:
        "404":
          description: "Either the session or phonon doesnt exist"
        "200":
          description: "Phonon sent"
    parameters:
    - in: path
      required: true
      name: sessionID
      type: string
      description: sessionID of connected card
    - in: "body"
      name: "body"
      description: array of phonons to be deleted
      required: true
      schema:
        type: "array"
        items:
          $ref: "#/definitions/Phonon"
  /cards/{sessionID}/phonon/create:
    post:
      tags:
      - "phonons"
      responses:
        "500":
          description: "it didnt work"
        "200":
          description: "created phonon"
          schema:
            type: "object"
            properties:
              index:
                type: "integer"
              pubkey:
                type: "string"
    parameters:
    - in: path
      required: true
      name: sessionID
      type: string
      description: sessionID of connected card

  /cards/{sessionID}/phonon/redeem:
    post:
      tags:
      - "phonons"
      responses:
        "400":
          description: "unable to decode request"
        "500":
          description: "unable to encode response"
        "200":
          description: "phonon successfully redeemed"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/RedeemPhononResponse"
    parameters:
    - in: path
      required: true
      name: sessionID
      type: string
      description: sessionID of connected card
    - in: "body"
      name: "body"
      description: "array of phonons to redeem along with redeem addresses to send them to"
      required: true
      schema:
        type: "array"
        items:
          $ref: "#/definitions/RedeemPhononRequest"
  /cards/{sessionID}/phonon/{phononIndex}/export:
    post:
      tags:
      - "phonons"
      responses:
        "404":
          description: "Either the session or phonon doesnt exist"
        "200":
          description: "Descriptor set properly"
          schema:
            type: "object"
            properties:
              privateKey:
                type: "string"
    parameters:
    - in: path
      required: true
      name: sessionID
      type: string
      description: sessionID of connected card
    - in: path
      required: true
      name: phononIndex
      type: string
      description: index of phonon to redeem
  /cards/{sessionID}/phonon/initDeposit:
    post:
      tags:
      - "phonons"
      summary: "initiate a new phonon deposit by creating raw phonons and retrieving their keyIndices, denominations, and addresses"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "404":
          description: "status not found"
        "400":
          description: "could not parse request"
        "500":
          description: "could not create necessary phonons"
        "200":
          description: "phonons created"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Phonon"
    parameters:
    - in: "path"
      required: true
      name: sessionID
      type: string
      description: "sessionID of connected card"
    - in: "body"
      name: "body"
      description: "phonon currencyType and list of denominations to be created"
      required: true
      schema:
        $ref: "#/definitions/DepositRequest"
  /cards/{sessionID}/phonon/finalizeDeposit:
    post:
      tags:
      - "phonons"
      summary: "finalize a phonon deposit by confirming success or failure of on chain deposit transaction"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "404":
          description: "status not found"
        "400":
          description: "could not parse request"
        "500":
          description: "failed to finalize deposit"
        "200":
          description: "deposit finalized"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/DepositConfirmation"
      parameters:
      - in: "path"
        required: true
        name: sessionID
        type: string
        description: "sessionID of connected card"
      - in: "body"
        name: "body"
        description: "phonons to be finalized along with status of on chain deposit transaction"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/DepositConfirmation"
  /logs:
    post:
      tags:
      - "logs"
      summary: "place to send logs"
      consumes:
      - "application/json"
      responses:
        "200":
          description: "log logged"
        "400":
          description: "log formatted wrong"
        "500":
          description: "unable to log log"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          type: object
  /checkDenomination:
    post:
      tags:
      - "general"
      summary: "check denomination before attempting to set on card"
      consumes:
      - "application/text"
      responses:
        "200":
          description: "valid denomination"
        "400":
          description: "unable to determine denomination value"
      parameters:
      - in: "body"
        name: "value"
        required: true
        schema:
          type: string
  /cards/{sessionID}/postedPhononNonce:
    get:
      tags:
        - sessions
      responses:
        404:
          description: no session with id
        200:
          description: nonce
          schema:
            type: object
            properties:
              Nonce:
                type: integer
    parameters:
      - in: path
        required: true
        name: sessionID
        type: string
        description: sessionID of connected card
  /cards/{sessionID}/identity/{nonce}:
    get:
      tags:
        - sessions
      responses:
        404:
          description: no session with id
        200:
          description: public key
          schema:
            type: object
            properties:
              PublicKey:
                type: string
              Signature:
                type: string
    parameters:
      - in: path
        required: true
        name: sessionID
        type: string
        description: sessionID of connected card
      - in: path
        required: true
        name: nonce
        type: string
        description: data for card to sign
  /cards/{sessionID}/phonon/post:
    post:
      tags:
        - phonons
      responses:
        404:
          description: "Either the session or phonon doesnt exist"
        200:
          description: Phonon sent
    parameters:
      - in: path
        required: true
        name: sessionID
        type: string
        description: sessionID of connected card
      - in: body
        name: body
        required: true
        schema:
          type: object
          properties:
            RecipientsPublicKey:
              type: string
            Nonce:
              type: integer
            KeyIndexes:
              type: "array"
              items:
                type: integer
  /cards/{sessionID}/receivePostedPhonons:
    post:
      tags:
        - sessions
      responses:
        404:
          description: no session with id
        200:
          description: Success
    parameters:
      - in: path
        required: true
        name: sessionID
        type: string
        description: sessionID of connected card
      - in: body
        name: body
        required: true
        schema:
          type: object
          properties:
            Packet:
              type: string
definitions:
  Phonon:
    type: object
    properties:
      KeyIndex:
        type: "integer"
      PubKey:
        type: "string"
      Address:
        type: "string"
      AddressType:
        type: "integer"
      SchemaVersion:
        type: "integer"
      ExtendedSchemaVersion:
        type: "integer"
      Denomination:
        type: "integer"
      CurrencyType:
        type: "integer"
  DepositRequest:
    type: object
    properties:
      CurrencyType:
        type: "integer"
      Denominations:
        type: "array"
        items:
          type: "integer"
  DepositConfirmation:
    type: object
    properties:
      Phonon:
        $ref: "#/definitions/Phonon"
      ConfirmedOnChain:
        type: "boolean"
      ConfirmedOnCard:
        type: "boolean"
  RedeemPhononRequest:
    type: object
    properties:
      Phonon:
        $ref: "#/definitions/Phonon"
      RedeemAddress:
        type: "string"
  RedeemPhononResponse:
    type: object
    properties:
      TransactionData: "string"
      PrivKey: "string"
      err: "string"
  SessionStatus:
    type: object
    properties:
      Name:
        type: "string"
      Initialized:
        type: "boolean"
      TerminalPaired:
        type: "boolean"
      PinVerified:
        type: "boolean"
